{"ast":null,"code":"var _jsxFileName = \"/home/oleg/Edu/Templater/react/src/context/TemplateContext.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TemplateContext = /*#__PURE__*/createContext({\n  inputFilename: '',\n  fileUpload: false,\n  paramsInput: false,\n  setFilename: () => {}\n});\nexport const TemplateState = ({\n  children\n}) => {\n  _s();\n  const [inputFilename, setFileName] = useState('');\n  const [fileUpload, setfileUpload] = useState(false);\n  const setFilename = filename => {\n    setFileName(filename);\n    setfileUpload(true);\n  };\n  return /*#__PURE__*/_jsxDEV(TemplateContext.Provider, {\n    value: {\n      inputFilename,\n      fileUpload,\n      setFilename\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(TemplateState, \"ngbIptkzAxTYn4d6ppJBvDy7zdg=\");\n_c = TemplateState;\nvar _c;\n$RefreshReg$(_c, \"TemplateState\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","TemplateContext","inputFilename","fileUpload","paramsInput","setFilename","TemplateState","children","_s","setFileName","setfileUpload","filename","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/oleg/Edu/Templater/react/src/context/TemplateContext.tsx"],"sourcesContent":["import React, {createContext, useState} from 'react'\n\ninterface ITemplateContext {\n  inputFilename: string\n  fileUpload: boolean\n  paramsInput: boolean\n  setFilename: (filename:string) => void\n}\n\nexport const TemplateContext = createContext<ITemplateContext>({\n  inputFilename: '',\n  fileUpload: false,\n  paramsInput: false,\n  setFilename: () => {}\n})\n\nexport const TemplateState = ({ children }: {children: React.ReactNode}) => {\n  const [inputFilename, setFileName] = useState('')\n  const [fileUpload, setfileUpload] = useState(false)\n\n  const setFilename = (filename:string) => {\n    setFileName(filename)\n    setfileUpload(true)\n  }\n\n  return (\n    <TemplateContext.Provider value={{ inputFilename, fileUpload, setFilename }}>\n      { children }\n    </TemplateContext.Provider>\n  )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,aAAa,EAAEC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AASpD,OAAO,MAAMC,eAAe,gBAAGJ,aAAa,CAAmB;EAC7DK,aAAa,EAAE,EAAE;EACjBC,UAAU,EAAE,KAAK;EACjBC,WAAW,EAAE,KAAK;EAClBC,WAAW,EAAEA,CAAA,KAAM,CAAC;AACtB,CAAC,CAAC;AAEF,OAAO,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAsC,CAAC,KAAK;EAAAC,EAAA;EAC1E,MAAM,CAACN,aAAa,EAAEO,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACjD,MAAM,CAACK,UAAU,EAAEO,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMO,WAAW,GAAIM,QAAe,IAAK;IACvCF,WAAW,CAACE,QAAQ,CAAC;IACrBD,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,oBACEV,OAAA,CAACC,eAAe,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAEX,aAAa;MAAEC,UAAU;MAAEE;IAAY,CAAE;IAAAE,QAAA,EACxEA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE/B,CAAC;AAAAT,EAAA,CAdYF,aAAa;AAAAY,EAAA,GAAbZ,aAAa;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}