{"ast":null,"code":"var _jsxFileName = \"/home/oleg/Edu/Templater/react/src/context/TemplateContext.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TemplateContext = /*#__PURE__*/createContext({\n  inputFilename: '',\n  fileUpload: false,\n  paramsScan: [],\n  setFilename: () => {},\n  setParams: () => {}\n});\nexport const TemplateState = ({\n  children\n}) => {\n  _s();\n  const [inputFilename, setFileName] = useState('');\n  const [fileUpload, setFileUpload] = useState(false);\n  const [paramsScan, setScanParams] = useState([]);\n  const setFilename = filename => {\n    setFileName(filename);\n    setFileUpload(true);\n  };\n  const setParams = params => {\n    setScanParams(params);\n  };\n  return /*#__PURE__*/_jsxDEV(TemplateContext.Provider, {\n    value: {\n      inputFilename,\n      fileUpload,\n      paramsScan,\n      setFilename,\n      setParams\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(TemplateState, \"0tfv37VSik9COv68C2dmje8gv5k=\");\n_c = TemplateState;\nvar _c;\n$RefreshReg$(_c, \"TemplateState\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","TemplateContext","inputFilename","fileUpload","paramsScan","setFilename","setParams","TemplateState","children","_s","setFileName","setFileUpload","setScanParams","filename","params","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/oleg/Edu/Templater/react/src/context/TemplateContext.tsx"],"sourcesContent":["import React, {createContext, useState} from 'react'\n\ninterface ITemplateContext {\n  inputFilename: string\n  fileUpload: boolean\n  paramsScan: string[]\n  setFilename: (filename:string) => void\n  setParams: (params:string[]) => void\n}\n\nexport const TemplateContext = createContext<ITemplateContext>({\n  inputFilename: '',\n  fileUpload: false,\n  paramsScan: [],\n  setFilename: () => {},\n  setParams: () => {},\n})\n\nexport const TemplateState = ({ children }: {children: React.ReactNode}) => {\n  const [inputFilename, setFileName] = useState('')\n  const [fileUpload, setFileUpload] = useState(false)\n  const [paramsScan, setScanParams] = useState<string[]>([]);\n\n  const setFilename = (filename:string) => {\n    setFileName(filename)\n    setFileUpload(true)\n  }\n\n  const setParams = (params:string[]) => {\n    setScanParams(params)\n  }\n\n  return (\n    <TemplateContext.Provider value={{ inputFilename, fileUpload, paramsScan, setFilename, setParams }}>\n      { children }\n    </TemplateContext.Provider>\n  )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,aAAa,EAAEC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAUpD,OAAO,MAAMC,eAAe,gBAAGJ,aAAa,CAAmB;EAC7DK,aAAa,EAAE,EAAE;EACjBC,UAAU,EAAE,KAAK;EACjBC,UAAU,EAAE,EAAE;EACdC,WAAW,EAAEA,CAAA,KAAM,CAAC,CAAC;EACrBC,SAAS,EAAEA,CAAA,KAAM,CAAC;AACpB,CAAC,CAAC;AAEF,OAAO,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAsC,CAAC,KAAK;EAAAC,EAAA;EAC1E,MAAM,CAACP,aAAa,EAAEQ,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACjD,MAAM,CAACK,UAAU,EAAEQ,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACM,UAAU,EAAEQ,aAAa,CAAC,GAAGd,QAAQ,CAAW,EAAE,CAAC;EAE1D,MAAMO,WAAW,GAAIQ,QAAe,IAAK;IACvCH,WAAW,CAACG,QAAQ,CAAC;IACrBF,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAML,SAAS,GAAIQ,MAAe,IAAK;IACrCF,aAAa,CAACE,MAAM,CAAC;EACvB,CAAC;EAED,oBACEd,OAAA,CAACC,eAAe,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEd,aAAa;MAAEC,UAAU;MAAEC,UAAU;MAAEC,WAAW;MAAEC;IAAU,CAAE;IAAAE,QAAA,EAC/FA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE/B,CAAC;AAAAX,EAAA,CAnBYF,aAAa;AAAAc,EAAA,GAAbd,aAAa;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}